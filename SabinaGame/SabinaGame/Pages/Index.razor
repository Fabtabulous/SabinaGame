@page "/"
@using System.Diagnostics
@using System.Threading.Tasks
@using SabinaGame.Data
@using System.Numerics
@inject SabinaGameService GameService


<h1>Kunstwerke</h1>
<div class="container">
   
    <div class="left-element">
        <p role="status">Fertige Kunstwerke: @gameState.kunstwerke.ToString()</p>
    </div>
    
    <div class="right-element">
        <button class="btn btn-primary" @onclick="gameState.kunstwerke.incrementManually">Kosten: Harte Arbeit</button>
    </div>

</div>

<br /><br>

@foreach (Iterable property in gameState.properties) {


    @if (property.show)
        {
   
        <h1>@property.Name</h1>
        <div class="container">

            <div class="left-element">
                <p role="status">@property.Name: @property.ToString()</p>
            </div>

            <div class="right-element">
                <button class="btn btn-primary" @onclick="property.incrementManually">Kosten: @property.kostenString() @property.kostenTräger.name</button>
            </div>

        </div>
        <br />
        <br>
        }

}


  


@code {
    SabinaGameService game = new SabinaGameService();

    SabinaGameState gameState;


    protected override async Task OnInitializedAsync()
    {
        game.setup();
        gameState = game.gameState;

        while (true)
        {
            await Task.Delay(16);

            game.kunstwerke();
            game.assistenten();
            game.werbung();
            game.stuff();

            StateHasChanged();



        }
    }

  


}
